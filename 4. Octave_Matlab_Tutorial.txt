Octave Commands:
*	Use % then text to write a comment. example: >> %This is comment
*	Addition >> 1+2
	Ans = 3
*	Subtraction >> 2-1 , Multiplication >>2*3, Division >> 1/2
*	Logical Operations:
	1 ==2
	Ans = 0
*	Not operator is ~ , not-equals is ~=
*	1 is true and 0 is false so >>1 && 0 Ans 0. while >>1 && 1 Ans 1
*	Some commands are same as unix like PS1(' Octave>>') changes the prompt to Octave>>.
*	Variables can be directly assigned to a value a= 1, b = 'Hi' and like that.
*	; supresses the print Ans= after each operation.
*	Printing the variable on screen can be done by just writing it on prompt >>B
*	Octave>>sprintf('2 decimals: %0.2f', pi) % to print rounded values.
	ans = 2 decimals: 3.14
*	We can also create matrices using A= [1 2;3 4;5 6]
	Ans A=  1 2
			3 4
			5 6
*	; sends the rest of input to next row of matrix
*	You can print A by simply typing >>A
*	To print certain row you can type A(2,:) % : means everything. same can be done for columns.
*	Matrix should have same horizontal and vertical dimensions, it cannot be [1;2 3 4; 5 6]
*	We can also set >>V = 0: 4: 12 this will increment 4 every time and create a column vector like 0 4 8 12
*	We can also generate a 3/3 matrix with all ones using >>ones(3,3) and like that.
*	Also we can generate other matrices by simply multiplying a number to out ones matrix >>C= 2*ones(3,3)
	will return a 3/3 matrix with all 2s.
*	Similarly we can generate zeroes(1,1), rand(1,3) % all random values.
*	We can generate a histogram of array using hist() function. >> hist(rand(1,1000))
*	To create an Identity matrix we can use eye() function >>eye(5) % will create a 5/5 identity matrix.
*	help command gives help for all commands.
*	To see the size of the matrix we can use size command >>size(A) Ans =3  2 % the output itself is a matrix
*	Length(A) gives the longer dimension.
*	Size(A,1) returns first dimension(rows) similarly size(A,2) returns columns.

Loading data:
*	To load data we can just >>load filename %this will load all the file data in a variable name as filename
*	To see all the variables we have in memory we can just do >> who
*	We can also find the size of the file using size(filename) command.
*	whos command gives the variables in memory as well as the size, datatype and bytes used.
*	We can use >> clear variablename % command to clear this variable.
*	If you simply type clear then it will clear all the variables in the memory.
*	We can save file using save command >>save hello.mat.
*	We can save value of a variable in a file by doing >>save hello.mat variablename.
*	If you want to same data in human readable format then you can do >>save hello.mat v -ascii.
*	We can concatinate two matrices using >>C = [A B] or >>A = [A,[110;220;330]].
*	We can also concatinate matrices to the bottom of other using >>C= [A:B].